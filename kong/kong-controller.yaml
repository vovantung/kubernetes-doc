apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-ingress-controller
  namespace: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-kong
  template:
    metadata:
      labels:
        app: ingress-kong
    spec:
      serviceAccountName: kong-ingress-controller
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      containers:
        - name: ingress-controller
          image: kong/kubernetes-ingress-controller:3.5
          args:
            - "--kong-admin-url=http://kong-kong-admin.kong.svc.cluster.local:8001"
            - "--publish-service=kong/kong-kong-proxy"
            - "--ingress-class=kong"
            - "--log-level=debug"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-ingress-controller
  namespace: kong
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kong-ingress-controller
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "pods", "nodes", "secrets", "events", "configmaps", "services"]
    verbs: ["get", "list", "watch", "create"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses", "ingressclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "ingressclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["configuration.konghq.com"]
    resources: ["kongplugins", "kongclusterplugins", "kongcredentials", "kongconsumers", "kongingresses", "kongconsumergroups", "kongvaults", "kongcustomentities", "tcpingresses", "udpingresses", "konglicenses", "kongupstreampolicies", "ingressclassparameterses"] 
    verbs: ["get", "list", "watch"]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update"]
  - apiGroups: ["configuration.konghq.com"]
    resources: ["kongconsumers/status"]
    verbs: ["get", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-ingress-controller
subjects:
  - kind: ServiceAccount
    name: kong-ingress-controller
    namespace: kong

