---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-ingress-controller
  namespace: kong
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kong-ingress-controller
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints", "nodes", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses", "ingressclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["configuration.konghq.com"]
    resources: ["kongplugins", "kongconsumers", "kongcredentials", "kongingresses", "kongclusterplugins"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-ingress-controller
subjects:
  - kind: ServiceAccount
    name: kong-ingress-controller
    namespace: kong
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-ingress-controller
  namespace: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong-ingress-controller
  template:
    metadata:
      labels:
        app: kong-ingress-controller
    spec:
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      serviceAccountName: kong-ingress-controller
      containers:
        - name: controller
          image: kong/kubernetes-ingress-controller:3.5
          args:
            - --kong-admin-url=http://kong-kong-admin.kong.svc.cluster.local.:8001
            - --ingress-class=kong
          env:
            - name: CONTROLLER_PUBLISH_SERVICE
              value: kong/kong-kong-proxy

