apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-to-kong-backend
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-http01
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - backend.txuapp.com
      secretName: nginx-to-kong-backend-tls
  rules:
    - host: backend.txuapp.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kong-proxy
                port:
                  number: 80

---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: nginx-to-kong-devops
#   namespace: default
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     cert-manager.io/cluster-issuer: letsencrypt-http01
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
# spec:
#   ingressClassName: nginx
#   tls:
#     - hosts:
#         - devops.txuapp.com
#       secretName: nginx-to-kong-devops-tls
#   rules:
#     - host: devops.txuapp.com
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: kong-proxy
#                 port:
#                   number: 80

---
# File: kong-proxy-externalname.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
  namespace: default
spec:
  type: ExternalName
  externalName: kong-proxy.kong.svc.cluster.local.
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
